"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateadmin"]("pages/_app",{

/***/ "./src/utils/telemetry.js":
/*!********************************!*\
  !*** ./src/utils/telemetry.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   telemetryFactory: function() { return /* binding */ telemetryFactory; }\n/* harmony export */ });\n/* harmony import */ var _Helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Helper */ \"./src/utils/Helper.ts\");\n\nconst hostURL = \"https://qa.prathamteacherapp.prathamdigital.org/telemetry\";\nlet CsTelemetryModule;\nlet EkTelemetry;\nlet jQuery;\nif (true) {\n    CsTelemetryModule = (__webpack_require__(/*! @project-sunbird/client-services/telemetry */ \"../../node_modules/@project-sunbird/client-services/telemetry/index.js\").CsTelemetryModule);\n    EkTelemetry = __webpack_require__(/*! @project-sunbird/telemetry-sdk */ \"../../node_modules/@project-sunbird/telemetry-sdk/index.js\");\n    jQuery = __webpack_require__(/*! jquery */ \"../../node_modules/jquery/dist/jquery.js\");\n    window.jQuery = jQuery;\n}\nconst telemetryConfig = {\n    apislug: \"\",\n    pdata: {\n        id: \"pratham-learning-management-portal\",\n        pid: \"0.0.1\",\n        ver: \"pratham-learning-management-portal\"\n    },\n    env: \"pratham-learning-management-portal\",\n    channel: \"pratham-learning-management-portal\",\n    did: \"did\",\n    authtoken: \"\",\n    studentid:  true && localStorage.getItem(\"userId\") || \"Anonymous\",\n    uid:  true && localStorage.getItem(\"userId\") || \"Anonymous\",\n    userName:  true && localStorage.getItem(\"userName\") || \"Anonymous\",\n    sid: (0,_Helper__WEBPACK_IMPORTED_MODULE_0__.generateUUID)(),\n    batchsize: 5,\n    mode: \"\",\n    host: hostURL,\n    endpoint: \"/v1/telemetry\",\n    tags: [],\n    enableValidation: true\n};\nif (true) {\n    (0,_Helper__WEBPACK_IMPORTED_MODULE_0__.getDeviceId)().then((deviceId)=>{\n        telemetryConfig.did = deviceId;\n    });\n}\nconst telemetryFactory = {\n    init: ()=>{\n        if (true) {\n            if (!CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.init({});\n                CsTelemetryModule.instance.telemetryService.initTelemetry({\n                    config: telemetryConfig,\n                    userOrgDetails: {}\n                });\n            }\n        }\n    },\n    interact: (interactEventInput)=>{\n        if (true) {\n            const eventData = getEventData(interactEventInput);\n            if (CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.telemetryService.raiseInteractTelemetry({\n                    options: eventData.options,\n                    edata: eventData.edata\n                });\n            }\n        }\n    },\n    impression: (impressionEventInput)=>{\n        if (true) {\n            const eventData = getEventData(impressionEventInput);\n            if (CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.telemetryService.raiseImpressionTelemetry({\n                    options: eventData.options,\n                    edata: eventData.edata\n                });\n            }\n        }\n    },\n    assess: (assessEventInput)=>{\n        if (true) {\n            const eventData = getEventData(assessEventInput);\n            if (CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.telemetryService.raiseAssesTelemetry({\n                    options: eventData.options,\n                    edata: eventData.edata\n                });\n            }\n        }\n    },\n    response: (responseEventInput)=>{\n        if (true) {\n            const eventData = getEventData(responseEventInput);\n            if (CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.telemetryService.raiseResponseTelemetry({\n                    options: eventData.options,\n                    edata: eventData.edata\n                });\n            }\n        }\n    },\n    interrupt: (interactEventInput)=>{\n        if (true) {\n            const eventData = getEventData(interactEventInput);\n            if (CsTelemetryModule.instance.isInitialised) {\n                CsTelemetryModule.instance.telemetryService.raiseInterruptTelemetry({\n                    options: eventData.options,\n                    edata: eventData.edata\n                });\n            }\n        }\n    },\n    start: (param)=>{\n        let { appName, ...edata } = param;\n        if (true) {\n            return {\n                type: edata === null || edata === void 0 ? void 0 : edata.type,\n                eid: (0,_Helper__WEBPACK_IMPORTED_MODULE_0__.generateUUID)(),\n                $set: {\n                    id: localStorage.getItem(\"id\") || \"Anonymous\"\n                },\n                actor: {\n                    id: localStorage.getItem(\"id\") || \"Anonymous\",\n                    type: \"Teacher\"\n                },\n                context: {\n                    type: appName !== null && appName !== void 0 ? appName : \"Standalone\"\n                },\n                edata\n            };\n        }\n    },\n    end: (param)=>{\n        let { appName, ...edata } = param;\n        if (true) {\n            return {\n                type: edata === null || edata === void 0 ? void 0 : edata.type,\n                eid: (0,_Helper__WEBPACK_IMPORTED_MODULE_0__.generateUUID)(),\n                $set: {\n                    id: localStorage.getItem(\"id\") || \"Anonymous\"\n                },\n                actor: {\n                    id: localStorage.getItem(\"id\") || \"Anonymous\",\n                    type: \"Teacher\"\n                },\n                context: {\n                    type: appName !== null && appName !== void 0 ? appName : \"Standalone\"\n                },\n                edata\n            };\n        }\n    }\n};\nfunction getEventData(eventInput) {\n    const timestamp = Date.now();\n    const event = {\n        edata: eventInput.edata,\n        options: {\n            context: getEventContext(eventInput),\n            object: getEventObject(eventInput),\n            tags: []\n        },\n        ets: timestamp\n    };\n    return event;\n}\nfunction getEventObject(eventInput) {\n    if (eventInput.object) {\n        const eventObjectData = {\n            id: eventInput.object.id || \"\",\n            type: eventInput.object.type || \"\",\n            ver: eventInput.object.ver || \"\",\n            rollup: eventInput.object.rollup || {}\n        };\n        return eventObjectData;\n    } else {\n        return {};\n    }\n}\nfunction getEventContext(eventInput) {\n    const eventContextData = {\n        channel: eventInput.edata.channel || telemetryConfig.channel,\n        pdata: eventInput.context.pdata || telemetryConfig.pdata,\n        env: eventInput.context.env || telemetryConfig.env,\n        sid: eventInput.sid || telemetryConfig.sid,\n        uid:  true && localStorage.getItem(\"userId\") || telemetryConfig.uid,\n        userName:  true && localStorage.getItem(\"userName\") || telemetryConfig.userName,\n        cdata: eventInput.context.cdata || []\n    };\n    if (telemetryConfig.sid) {\n        eventContextData.cdata.push({\n            id: telemetryConfig.sid,\n            type: \"UserSession\"\n        });\n    }\n    eventContextData.cdata.push({\n        id: \"uuid\",\n        type: \"Device\"\n    });\n    return eventContextData;\n}\n// eslint-disable-next-line no-unused-vars\nfunction getRollUpData() {\n    let data = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n    const rollUp = {};\n    data.forEach((element, index)=>rollUp[\"l\" + (index + 1)] = element);\n    return rollUp;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/telemetry.js\n"));

/***/ })

});